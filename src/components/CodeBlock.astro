---
const { lang, filename } = Astro.props;
---

<div class="code-block">
  <div
    class:list={[
      "code-block__meta",
      filename && filename.toLowerCase() === "terminal" ? "terminal" : "",
    ]}
  >
    {filename && <div class="code-block__filename">{filename}</div>}
    {
      lang && (
        <div class="code-block__lang" data-lang={lang}>
          {lang}
        </div>
      )
    }
  </div>
  <div class="code-block__wrapper">
    <slot />
  </div>
</div>

<style>
  .code-block {
    --font-size: 0.65rem;
    --padding: var(--space-4);
    --border-width: 1px;
    --code-border: hsl(from var(--color-border) h s calc(l * 0.9));
    --code-bg-color: black;
  }

  @media screen and (min-width: 768px) {
    .code-block {
      --font-size: 1rem;
      --padding: var(--space-8);
    }
  }

  :global(code[data-theme*=" "]),
  :global(code[data-theme*=" "] span) {
    color: var(--shiki-dark);
  }

  .code-block {
    position: relative;
    border-radius: var(--border-radius-sm);
    overflow: hidden;
    background-color: var(--code-bg-color);
  }

  .code-block :global(figure[data-rehype-pretty-code-figure]) {
    margin: 0;
  }

  .code-block :global(figure[data-rehype-pretty-code-figure] pre) {
    overflow-x: auto;
  }

  .code-block :global(code[data-language]) {
    anchor-name: --code-block;
    padding: var(--padding);
    font-size: var(--font-size);
  }

  .code-block__meta {
    position-anchor: --code-block;
    position-area: span-bottom span-right;
    background-color: var(--color-onPrimary);
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .code-block__meta.terminal::before,
  .code-block__meta.terminal::after {
    content: "";
    position: absolute;
    right: 9px;
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: red;
    opacity: 0.7;
  }
  .code-block__meta.terminal::after {
    right: 30px;
    background-color: greenyellow;
  }

  .code-block__filename {
    padding: var(--space-2) var(--space-4) var(--space-1);
    letter-spacing: 0.05em;
    font-weight: 600;
    font-size: var(--font-size);
    font-family: var(--font-mono);
    color: var(--color-border);
  }

  .code-block__lang {
    padding: var(--space-1) var(--space-4);
    letter-spacing: 0.05em;
    font-weight: 600;
    text-transform: uppercase;
    font-size: var(--font-size);
    font-family: var(--font-mono);
    color: var(--color-secondary);
  }

  .code-block__lang[data-lang="bash"] {
    background-color: #22c55e;
  }

  .code-block__lang[data-lang="typescript"],
  .code-block__lang[data-lang="ts"],
  .code-block__lang[data-lang="javascript"],
  .code-block__lang[data-lang="js"],
  .code-block__lang[data-lang="jsx"],
  .code-block__lang[data-lang="tsx"] {
    background-color: #60a5fa;
  }

  .code-block__lang[data-lang="gherkin"] {
    background-color: #eab308;
  }

  .code-block__lang[data-lang="css"] {
    background-color: #ec4899;
  }

  .code-block__lang[data-lang="html"],
  .code-block__lang[data-lang="xml"],
  .code-block__lang[data-lang="json"],
  .code-block__lang[data-lang="svg"] {
    background-color: #f97316;
  }

  /* CODE: Diff Highlighting */
  :global(.has-diff code .diff) {
    --pad-left: 24px;
    position: relative;
    transition: background-color 0.5s;
    margin-left: calc(-1 * var(--pad-left));
    padding-left: var(--pad-left);
    width: calc(100% + var(--pad-left));
    display: inline-block;
  }

  :global(.has-diff code .diff.remove) {
    background-color: oklab(from var(--color-error) L a calc(b * 0.9) / 0.2);
  }

  :global(.has-diff code .diff.add) {
    background-color: oklab(from var(--color-success) L a calc(b * 0.9) / 0.2);
  }

  :global(.has-diff code .diff::before) {
    position: absolute;
    left: 10px;
  }

  :global(.has-diff code .diff.add::before) {
    content: "+";
    color: var(--color-success);
    font-weight: 900;
  }

  :global(.has-diff code .diff.remove::before) {
    content: "-";
    color: var(--color-error);
    font-weight: 900;
  }
</style>
