---
import ColorPicker from "../components/ColorPicker.tsx";
import "../styles/styles.css";

const mainTitle = "Michael Watts, Software Engineer";
const { pageTitle, pageDescription } = Astro.props;
---

<script>
  import { themePrimary, themeOnPrimary, themeSecondary } from "../store";

  document.documentElement.style.setProperty(
    "--color-primary",
    themePrimary.get()
  );
  document.documentElement.style.setProperty(
    "--color-onPrimary",
    themeOnPrimary.get()
  );
  document.documentElement.style.setProperty(
    "--color-secondary",
    themeSecondary.get()
  );

  themePrimary.subscribe((color) => {
    document.documentElement.style.setProperty("--color-primary", color);
  });

  themeOnPrimary.subscribe((color) => {
    document.documentElement.style.setProperty("--color-onPrimary", color);
  });

  themeSecondary.subscribe((color) => {
    document.documentElement.style.setProperty("--color-secondary", color);
  });

  if (
    "IntersectionObserver" in window &&
    "IntersectionObserverEntry" in window &&
    "intersectionRatio" in window.IntersectionObserverEntry.prototype
  ) {
    let observer = new IntersectionObserver((entries) => {
      if (entries[0].boundingClientRect.y < 0) {
        document.body.classList.add("header-not-at-top");
      } else {
        document.body.classList.remove("header-not-at-top");
      }
    });
    const anchor = document.querySelector("#top-of-site-pixel-anchor");
    if (anchor) {
      observer.observe(anchor);
    }
  }
</script>

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{mainTitle} | {pageTitle}</title>
    <meta name="description" content={pageDescription} />
    <link rel="stylesheet" href="https://use.typekit.net/eaq6veo.css" />
  </head>
  <body class="work">
    <div class="container">
      <span id="top-of-site-pixel-anchor"></span>
      <div
        id="main"
        role="main"
        class="main"
        style="view-transition-name: work-main;"
      >
        <slot />
      </div>
    </div>

    <ColorPicker client:only="react" />
  </body>
</html>

<style is:global>
  body.work {
    --body-margin: var(--space-2);
    --content-padding: var(--space-6);
    --bg-color: var(--color-primary);
    --panel-color: var(--color-primary);
    --text-color: var(--color-onPrimary);
  }

  @media screen and (min-width: 1280px) {
    body.work {
      --body-margin: var(--space-4);
      --content-padding: var(--space-4);
      --flex-direction: row;
    }
  }

  body.work {
    background-color: var(--bg-color);
  }

  .container {
    display: grid;
    gap: var(--space-4);
    padding: var(--body-margin);
  }

  .main {
    height: auto;
    background-color: var(--panel-color);
    color: var(--text-color);
    border-radius: var(--border-radius);
    margin-top: var(--controls-height);
    padding: var(--content-padding);
  }

  .main h1 {
    font-size: clamp(
      var(--font-size-lg),
      calc(4vw + 1rem),
      var(--font-size-xl)
    );
    font-family: var(--body-font);
    font-variation-settings: var(--font-bold);
    line-height: 1;
    color: var(--text-color);
    margin-top: 0;
  }
</style>
